{"version":3,"sources":["components/header/Header.js","components/card/Card.js","components/list/List.js","components/error/Error.js","utils/apiCalls.js","components/app/App.js","index.js"],"names":["Header","Card","article","className","title","byline","updated_date","section","url","multimedia","List","articleCards","articles","map","currentArticle","Error","getData","a","fetch","response","checkForError","ok","status","json","data","App","useState","setArticles","errorCode","setErrorCode","fetchAndCleanData","fetched","results","Number","message","useEffect","exact","path","render","to","ReactDOM","document","getElementById"],"mappings":"6VAEaA,EAAS,WACpB,OACE,yCCFSC,G,YAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,yBAASC,UAAU,OAAnB,SACE,+BACE,wCACA,6BAAKD,EAAQE,QAEb,qCACA,6BAAKF,EAAQG,SAEb,+CACA,6BAAKH,EAAQI,eAEb,0CACA,6BAAKJ,EAAQK,UAEb,sCACA,6BAAKL,EAAQM,MAEb,0CACA,6BAAKN,EAAQO,WAAW,GAAGD,aCnBtBE,EAAO,SAAC,GAAkB,IACjCC,EADgC,EAAfC,SACOC,KAAI,SAAAC,GAC9B,OACE,cAAC,EAAD,CAEEZ,QAASY,GAFX,UACUA,EAAeN,SAM7B,OACE,0BAASL,UAAU,oBAAnB,UACE,0CACA,yBAASA,UAAU,QAAnB,SACGQ,QCfII,G,MAAQ,WACnB,OACE,yCCJSC,EAAO,uCAAG,WAAOT,GAAP,eAAAU,EAAA,qJAGAC,MAAM,GAAD,OAHL,8CAGK,OAAUX,EAAV,yBAHL,mDAGjBY,EAHiB,yBAIdC,EAAcD,IAJA,2CAAH,sDAOdC,EAAa,uCAAG,WAAOD,GAAP,eAAAF,EAAA,yDACfE,EAASE,GADM,sBAEZ,IAAIN,MAAMI,EAASG,QAFP,uBAIDH,EAASI,OAJR,cAIdC,EAJc,yBAKXA,GALW,2CAAH,sDCCNC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOd,EAAP,KAAiBe,EAAjB,KACA,EAAkCD,mBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAEMC,EAAiB,uCAAG,WAAOvB,GAAP,eAAAU,EAAA,+EAEFD,EAAQT,GAFN,OAElBwB,EAFkB,OAGtBJ,EAAYI,EAAQC,SAHE,gDAKtBH,EAAaI,OAAO,KAAMC,UALJ,yDAAH,sDAavB,OAJAC,qBAAU,WACRL,EAAkB,UACjB,IAGD,qCACE,cAAC,EAAD,IACA,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC5B,cAAC,EAAD,CAAM1B,SAAUA,OAGlB,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,SAASC,OAAQ,kBACjC,cAAC,EAAD,CAAOV,UAAWA,OAGpB,cAAC,IAAD,CAAUW,GAAG,oB,QChCvBC,IAASF,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFG,SAASC,eAAe,W","file":"static/js/main.21cb0716.chunk.js","sourcesContent":["import './Header.css';\n\nexport const Header = () => {\n  return (\n    <h1>Header</h1>\n  )\n}","import './Card.css';\n\nexport const Card = ({ article }) => {\n  return (\n    <article className='card'>\n      <dl>\n        <dt>Title:</dt>\n        <dd>{article.title}</dd>\n\n        <dt>By:</dt>\n        <dd>{article.byline}</dd>\n\n        <dt>Last Updated:</dt>\n        <dd>{article.updated_date}</dd>\n\n        <dt>Section:</dt>\n        <dd>{article.section}</dd>\n\n        <dt>URL:</dt>\n        <dd>{article.url}</dd>\n\n        <dt>Picture:</dt>\n        <dd>{article.multimedia[0].url}</dd>\n      </dl>\n    </article>\n  )\n}","import './List.css';\nimport { Card } from \"../card/Card\"\n\nexport const List = ({ articles }) => {\n  let articleCards = articles.map(currentArticle => {\n    return (\n      <Card\n        key={`${currentArticle.url}`}\n        article={currentArticle}\n      />\n    )\n  })\n\n  return (\n    <section className='articlesContainer'>\n      <h2>Articles</h2>\n      <section className='cards'>\n        {articleCards}\n      </section>\n    </section>\n  )\n}","import './Error.css';\n\nexport const Error = () => {\n  return (\n    <h1>Error</h1>\n  )\n}","export const getData = async (section) => {\n  let url = `https://api.nytimes.com/svc/topstories/v2/`\n  let apiKey = `1sPI8hfEhEK7GiJ4Hc2odGXpANBbiCVJ`\n  let response = await fetch(`${url}${section}.json?api-key=${apiKey}`)\n  return checkForError(response)\n}\n\nconst checkForError = async (response) => {\n  if (!response.ok) {\n    throw new Error(response.status)\n  } else {\n    let data = await response.json()\n    return data\n  }\n}","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Header } from '../header/Header';\nimport { List } from '../list/List';\nimport { Error } from '../error/Error';\nimport { getData } from '../../utils/apiCalls';\n\nexport const App = () => {\n  const [articles, setArticles] = useState([]);\n  const [errorCode, setErrorCode] = useState(0);\n\n  const fetchAndCleanData = async (section) => {\n    try {\n      let fetched = await getData(section)\n      setArticles(fetched.results)\n    } catch (error) {\n      setErrorCode(Number(error.message))\n    }\n  }\n\n  useEffect(() => {\n    fetchAndCleanData('home')\n  }, [])\n\n  return (\n    <>\n      <Header />\n      <main>\n        <Switch>\n          <Route exact path='/' render={() =>\n            <List articles={articles} /> \n          }/>\n\n          <Route exact path='/error' render={() =>\n            <Error errorCode={errorCode} />\n          }/>\n          \n          <Redirect to='/error' />\n        </Switch>\n      </main>\n    </>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/app/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}